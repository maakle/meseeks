{
  "openapi": "3.0.0",
  "paths": {
    "/v1/whatsapp/webhook": {
      "get": {
        "operationId": "WhatsappController_whatsappVerificationChallenge_v1",
        "parameters": [
          {
            "name": "hub.verify_token",
            "required": true,
            "in": "query",
            "description": "The verification token",
            "schema": {}
          },
          {
            "name": "hub.challenge",
            "required": true,
            "in": "query",
            "description": "The challenge string to verify the webhook",
            "schema": {}
          },
          {
            "name": "hub.mode",
            "required": true,
            "in": "query",
            "description": "The mode of the webhook verification",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook verification successful"
          },
          "400": {
            "description": "Invalid verification request"
          }
        },
        "summary": "Verify WhatsApp webhook",
        "tags": [
          "whatsapp"
        ]
      },
      "post": {
        "operationId": "WhatsappController_handleIncomingWhatsappMessage_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Message processed successfully"
          },
          "400": {
            "description": "Invalid message format"
          }
        },
        "summary": "Handle incoming WhatsApp messages",
        "tags": [
          "whatsapp"
        ]
      }
    },
    "/v1/users/{id}": {
      "get": {
        "operationId": "UserController_getUserById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "phoneNumber": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "phoneNumber"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key"
          },
          "404": {
            "description": "User not found"
          }
        },
        "summary": "Get a user by ID",
        "tags": [
          "users"
        ]
      }
    },
    "/v1/users": {
      "post": {
        "operationId": "UserController_createUser_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created/updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "phoneNumber": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "phoneNumber"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "401": {
            "description": "Unauthorized - Invalid API key"
          }
        },
        "summary": "Create or update a user",
        "tags": [
          "users"
        ]
      }
    },
    "/v1/organizations": {
      "post": {
        "operationId": "OrganizationsController_create_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organization created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "apiKeys": {
                      "type": "array",
                      "items": {}
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "apiKeys"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "summary": "Create a new organization",
        "tags": [
          "organizations"
        ]
      },
      "get": {
        "operationId": "OrganizationsController_findAll_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all organizations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "apiKeys": {
                        "type": "array",
                        "items": {}
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "apiKeys"
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Get all organizations",
        "tags": [
          "organizations"
        ]
      }
    },
    "/v1/organizations/{id}": {
      "get": {
        "operationId": "OrganizationsController_findOne_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "apiKeys": {
                      "type": "array",
                      "items": {}
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "apiKeys"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Organization not found"
          }
        },
        "summary": "Get an organization by id",
        "tags": [
          "organizations"
        ]
      },
      "delete": {
        "operationId": "OrganizationsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Organization deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "apiKeys": {
                      "type": "array",
                      "items": {}
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "apiKeys"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Organization not found"
          }
        },
        "summary": "Delete an organization",
        "tags": [
          "organizations"
        ]
      }
    },
    "/v1/organizations/{organizationId}/api-keys": {
      "post": {
        "operationId": "ApiKeysController_create_v1",
        "parameters": [
          {
            "name": "organizationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKeyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "API key created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "prefix": {
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string"
                    },
                    "lastUsedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "isActive": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "prefix",
                    "organizationId",
                    "lastUsedAt",
                    "expiresAt",
                    "isActive"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "summary": "Create a new API key",
        "tags": [
          "api-keys"
        ]
      },
      "get": {
        "operationId": "ApiKeysController_findAll_v1",
        "parameters": [
          {
            "name": "organizationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all API keys",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "prefix": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "string"
                      },
                      "lastUsedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "expiresAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "isActive": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "prefix",
                      "organizationId",
                      "lastUsedAt",
                      "expiresAt",
                      "isActive"
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Get all API keys for an organization",
        "tags": [
          "api-keys"
        ]
      }
    },
    "/v1/organizations/{organizationId}/api-keys/{id}": {
      "get": {
        "operationId": "ApiKeysController_findOne_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "prefix": {
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string"
                    },
                    "lastUsedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "isActive": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "prefix",
                    "organizationId",
                    "lastUsedAt",
                    "expiresAt",
                    "isActive"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "API key not found"
          }
        },
        "summary": "Get an API key by id",
        "tags": [
          "api-keys"
        ]
      },
      "delete": {
        "operationId": "ApiKeysController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "API key deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "prefix": {
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string"
                    },
                    "lastUsedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "isActive": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "prefix",
                    "organizationId",
                    "lastUsedAt",
                    "expiresAt",
                    "isActive"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "API key not found"
          }
        },
        "summary": "Delete an API key",
        "tags": [
          "api-keys"
        ]
      }
    }
  },
  "info": {
    "title": "Meseeks API",
    "description": "The Meseeks API documentation",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "UpsertUserDto": {
        "type": "object",
        "properties": {}
      },
      "CreateOrganizationDto": {
        "type": "object",
        "properties": {}
      },
      "CreateApiKeyDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}